import kotlin.Boolean;

CREATE TABLE credits (
    credit_id TEXT NOT NULL PRIMARY KEY,
    movie_id INTEGER,
    show_id INTEGER,
    adult INTEGER AS Boolean NOT NULL DEFAULT  0,
    gender INTEGER NOT NULL DEFAULT 1,
    known_for_department TEXT NOT NULL DEFAULT "",
    name TEXT NOT NULL DEFAULT "",
    original_name TEXT NOT NULL DEFAULT "",
    popularity REAL NOT NULL DEFAULT 0,
    character TEXT NOT NULL DEFAULT "",
    crew INTEGER AS Boolean NOT NULL DEFAULT 0,
    ordering INTEGER,
    person_id INTEGER,
    profile_path TEXT,
    poster_path TEXT,
    title TEXT NOT NULL DEFAULT ""
);


selectById:
SELECT * FROM credits WHERE :id = credit_id LIMIT 1;

selectByMovieId:
SELECT * FROM credits
WHERE credits.movie_id = :movieId
ORDER BY COALESCE(credits.ordering, 999)
LIMIT :limit OFFSET :offset;

countCreditsForMovieId:
SELECT count(*)
FROM credits
WHERE credits.movie_id = :movieId;

countCreditsForShowId:
SELECT count(*)
FROM credits
WHERE credits.show_id = :showId;


selectByShowId:
SELECT * FROM credits
WHERE credits.show_id = :showId
ORDER BY COALESCE(credits.ordering, 999)
LIMIT :limit OFFSET :offset;



countCreditsForPersonId:
SELECT count(credit_id)
FROM credits
WHERE credits.person_id = :personId;

selectByPersonId:
SELECT credits.*
FROM credits
WHERE credits.person_id = :personId
LIMIT :limit OFFSET :offset;

insert:
INSERT OR REPLACE INTO credits(credit_id, show_id, movie_id, adult, gender, known_for_department, name, original_name, popularity, character, crew, ordering, person_id, profile_path, poster_path, title)
VALUES (:id,:showId,:movieId, :adult, :gender, :knownForDepartment, :name,
:originalName, :popularity,:character, :crew, :ordering,:personId, :profilePath, :posterPath, :title);

update:
UPDATE credits
SET
   adult = COALESCE(:adult, adult),
   gender = COALESCE(:gender, gender),
   known_for_department = COALESCE(:knownForDepartment, known_for_department),
   name = COALESCE(:name, name),
   original_name = COALESCE(:originalName, original_name),
   popularity = COALESCE(:popularity, popularity),
   character = COALESCE(:character, character),
   crew = COALESCE(:crew, crew),
   ordering = COALESCE(:ordering, ordering),
   person_id = COALESCE(:personId, person_id),
   profile_path = COALESCE(:profilePath, profile_path),
   poster_path = COALESCE(:posterPath, poster_path),
   title = COALESCE(:title, title)
WHERE credit_id = :id;
