
import kotlin.Boolean;

CREATE TABLE trailer (
    trailer_id TEXT NOT NULL PRIMARY KEY,
    movie_id INTEGER,
    show_id INTEGER,
    name TEXT NOT NULL,
    video_key TEXT NOT NULL,
    site TEXT NOT NULL,
    size INTEGER NOT NULL,
    official INTEGER AS Boolean NOT NULL,
    type TEXT NOT NULL,
    published_at TEXT NOT NULL,
    FOREIGN KEY (show_id) REFERENCES show(id) ON DELETE CASCADE,
     FOREIGN KEY (movie_id) REFERENCES movie(id) ON DELETE CASCADE
);


selectById:
SELECT * FROM trailer WHERE :id = trailer_id LIMIT 1;

selectByMovieId:
SELECT trailer.*
FROM trailer
WHERE trailer.movie_id = :movieId;

selectByShowId:
SELECT trailer.*
FROM trailer
WHERE trailer.show_id = :showId;


insert:
INSERT OR IGNORE INTO trailer(trailer_id, movie_id, show_id, name, video_key, site, size, official, type, published_at)
VALUES (:trailerId, :movieId, :showId,:name, :videoKey, :site, :size, :official, :type, :publishedAt);

update:
UPDATE trailer
SET
   name = COALESCE(:name, name),
   video_key = COALESCE(:videoKey, video_key),
   site = COALESCE(:site, site),
   size = COALESCE(:size, size),
   official = COALESCE(:official, official),
   type = COALESCE(:type, type),
   published_at = COALESCE(:publishedAt, published_at)
WHERE trailer_id = :id;

lastInsertRowId:
SELECT last_insert_rowid();
